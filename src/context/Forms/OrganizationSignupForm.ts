import { IForm, inputTypes, Columns, Variant, IInput, SecondaryActions, Components } from "./FormInterfaces";
import { IOrganization } from "../Models/Organizations";

export const organizationSignupForm: IForm  = {
    formName: "organizationSignupForm",
    inputs: [
        {
            name: "name",
            label: true,
            displayName: "Company Name",
            value: "",
            type: inputTypes.text,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string",
                valid: null,
                required: true,
                lengthRequired: false,
                validationMessage: "",
            }
        },
        {
            name: "street",
            label: true,
            displayName: "Street Number",
            value: "",
            type: inputTypes.text,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string",
                valid: null,
                required: true,
                lengthRequired: false,
                validationMessage: "",
            }
        },
        {
            name: "state_province",
            label: true,
            displayName: "State or Province",
            value: "",
            type: inputTypes.text,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string",
                valid: null,
                required: true,
                lengthRequired: false,
                validationMessage: "",
            }
        },
        {
            name: "city",
            label: true,
            displayName: "City",
            value: "",
            type: inputTypes.text,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string",
                valid: null,
                required: true,
                lengthRequired: false,
                validationMessage: "",
            }
        },
        {
            name: "postalCode",
            label: true,
            displayName: "Postal Code",
            value: "",
            type: inputTypes.text,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string number",
                valid: null,
                required: true,
                lengthRequired: true,
                length: {min: 5, max: 10},
                validationMessage: "",
            }
        },
        {
            name: "country",
            label: true,
            displayName:"Country",
            value: "",
            type: inputTypes.text,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string",
                valid: null,
                required: true,
                lengthRequired: false,
                validationMessage: "",
            }
        },
        {
            name: "phoneNumber",
            label: true,
            displayName:"Phone Number",
            value: "",
            type: inputTypes.tel,
            pattern: "[0-9]*",
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string number",
                valid: null,
                required: true,
                lengthRequired: true,
                length: {min: 10, max: 10},
                validationMessage: "",
            }
        },
        {
            name: "classification",
            label: true,
            displayName:"Classification",
            value: "",
            type: inputTypes.text,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string",
                valid: null,
                required: false,
                lengthRequired: false,
                validationMessage: "",
            }
        },
        {
            name: "yearFounded",
            label: true,
            displayName:"Year Founded",
            value: "",
            type: inputTypes.number,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "number",
                valid: null,
                required: true,
                lengthRequired: true,
                length: {min: 4, max: 4},
                validationMessage: "",
            }
        },
        {
            name: "website",
            label: true,
            displayName:"Website",
            value: "",
            type: inputTypes.text,
            columns:Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string",
                valid: null,
                lengthRequired: false,
                required: false,
                validationMessage: "",
            }
        },
        {
            name: "qualityCertifications",
            label: true,
            displayName:"Quality Certifications",
            value: "",
            type: inputTypes.text,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: "string",
                valid: null,
                required: false,
                lengthRequired: false,
                validationMessage: "",
            }
        },
        {
            name: "numberOfLocations",
            label: true,
            displayName:"Number Of Locations",
            value: "",
            type: inputTypes.number,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: inputTypes.number,
                valid: null,
                required: true,
                lengthRequired: true,
                length: {min: 1, max: 3},
                validationMessage: "",
            }
        },
        {
            name: "numberOfEmployees",
            label: true,
            displayName:"Employee Size",
            value: "",
            type: inputTypes.number,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: inputTypes.number,
                valid: null,
                required: true,
                lengthRequired: false,
                validationMessage: "",
            }
        },
        {
            name: "annualSales",
            label: true,
            displayName:"Annual Sales",
            value: "",
            type: inputTypes.number,
            columns: Columns.col6,
            inputClass: "",
            validation: {
                validationType: inputTypes.number,
                valid: null,
                required: false,
                lengthRequired: false,
                validationMessage: "",
            },
        },
        {
            name: "yearsInOperation",
            displayName: "Years in Operation",
            label: true,
            type: inputTypes.dropdown,
            inputClass: "hidden",
            columns: Columns.none,
            value: "10",
            validation: {
                validationType: "string",
                valid: null,
                required: true,
                lengthRequired: false,
                validationMessage: "",

            },
            choices: [
                {name: "yearsInOperation", displayName: "",            value: " "},
                {name: "yearsInOperation", displayName: "Any",         value: "Any"},
                {name: "yearsInOperation", displayName: "0-5 Years",   value: "0-5"},
                {name: "yearsInOperation", displayName: "5-10 Years",  value: "5-10"},
                {name: "yearsInOperation", displayName: "10-15 Years", value: "10-15"},
                {name: "yearsInOperation", displayName: "20+ Years",   value: "20+"},
            ]
        },
        {
            name: "components",
            displayName: "Components",
            label: false,
            type: inputTypes.dropdown,
            inputClass: "",
            wrapperClass: "hidden",
            columns: Columns.none,
            value: "none",
            validation: {
                validationType: "string",
                valid: null,
                required: true,
                lengthRequired: false,
                validationMessage: "",

            },
            choices: [
                {name: "components", displayName: "",                           value: " "},
                {name: "components", displayName: "Doorways",                   value: Components.doorways},
                {name: "components", displayName: "Floors",                     value: Components.floors},
                {name: "components", displayName: "Floor Panels",               value: Components.floorPanels},
                {name: "components", displayName: "Handrails and Stanchions",   value: Components.handrailsAndStanchions},
                {name: "components", displayName: "Lighting",                   value: Components.lighting},
                {name: "components", displayName: "Public Information Systems", value: Components.publicInformationSystems},
                {name: "components", displayName: "Restrooms",                  value: Components.restrooms},
                {name: "components", displayName: "Sleeping Compartments",      value: Components.sleepingCompartments},
            ]
        },
        {
            name: "supplier",
            displayName: "Designate Organization as Supplier", // TODO: force user to choose yes or no.
            type: inputTypes.checkbox,
            label: false,
            inline: false,
            inputClass: "",
            labelClass: "",
            columns: Columns.col12,
            value: false, 
            secondaryAction: SecondaryActions.toggleProductsList,
        },
        {
            name: "veteranOwned",
            displayName: "Veteran Owned",
            type: inputTypes.checkbox,
            label: false,
            inline: false,
            inputClass: "",
            labelClass: "",
            columns: Columns.col12,
            value: false, 
        },
        {
            name: "minorityOwned",
            displayName: "Minority Owned",
            type: inputTypes.checkbox,
            label: false,
            inline: false,
            inputClass: "",
            labelClass: "",
            columns: Columns.col12,
            value: false, 
        },
        {
            name: "womanOwned",
            displayName: "Woman Owned",
            type: inputTypes.checkbox,
            label: false,
            inline: false,
            inputClass: "",
            labelClass: "",
            columns: Columns.col12,
            value: false, 
        },
        {
            name: "buyAmerica",
            displayName: "Buy America Company",
            type: inputTypes.checkbox,
            label: false,
            inline: false,
            inputClass: "",
            labelClass: "",
            columns: Columns.col12,
            value: false, 
        },
        {
            name: "byAmerica",
            displayName: "By America",
            type: inputTypes.checkbox,
            label: false,
            inline: false,
            inputClass: "",
            labelClass: "",
            columns: Columns.col12,
            value: false, 
        },
        {
            name: "isoCertified",
            displayName: "ISO Certified",
            type: inputTypes.checkbox,
            label: false,
            inline: false,
            inputClass: "",
            labelClass: "",
            columns: Columns.col12,
            value: false, 
        },
        {
            name: "greenCertified",
            displayName: "Green Certified",
            type: inputTypes.checkbox,
            label: false,
            inline: false,
            inputClass: "",
            labelClass: "",
            columns: Columns.col12,
            value: false, 
        },
        {
            name: "establishedProduct",
            displayName: "Established Product",
            type: inputTypes.checkbox,
            label: false,
            inline: false,
            inputClass: "",
            labelClass: "",
            columns: Columns.col12,
            value: false, 
        },
        // {
        //     name: "portfolio",
        //     displayName: "Portfolio",
        //     type: inputTypes.checkbox,
        //     label: false,
        //     inline: false,
        //     inputClass: "",
        //     labelClass: "",
        //     columns: Columns.col12,
        //     value: false,
        // },
        {
            name: "organizationSignupSubmit",
            displayName: "Submit",
            disabled: false,
            label: false,
            value: "",
            type: inputTypes.button,
            submitType: "organizationSignup",        
            variant: Variant.primary,
            wrapperClass: "",
            inputClass: "",
            columns: Columns.col6,
        },
    ],
    getValues: getValues,
    getValuesHelper: getValuesHelper,
}

function getValues(this: IForm): IOrganization {
    return {
        name:               getValuesHelper(this, "name"),
        phoneNumber:        getValuesHelper(this, "phoneNumber"), 
        website:            getValuesHelper(this, "website"),
        yearFounded:        getValuesHelper(this, "yearFounded"),
        numberOfEmployees:  getValuesHelper(this, "numberOfEmployees"),
        numberOfLocations:  getValuesHelper(this, "numberOfLocations"),
        annualSales:        getValuesHelper(this, "annualSales"),
        supplier:           getValuesHelper(this, "supplier"),
        buyAmerica:         getValuesHelper(this, "buyAmerica"),
        byAmerica:          getValuesHelper(this, "byAmerica"),
        minorityOwned:      getValuesHelper(this, "minorityOwned"),
        womanOwned:         getValuesHelper(this, "womanOwned"),
        veteranOwned:       getValuesHelper(this, "veteranOwned"),
        isoCertified:       getValuesHelper(this, "isoCertified"),
        greenCertified:     getValuesHelper(this, "greenCertified"),
        establishedProduct: getValuesHelper(this, "establishedProduct"),
        yearsInOperation:   getValuesHelper(this, "yearsInOperation"),
        classifications: [
            getValuesHelper(this, "establishedProduct")
        ],
        address: {
            street:         getValuesHelper(this, "street"),
            city:           getValuesHelper(this, "city"),
            state_province: getValuesHelper(this, "state_province"),
            postalCode:     getValuesHelper(this, "postalCode"),
            country:        getValuesHelper(this, "country"),
        },
        components:         getValuesHelper(this, "components"),
        adminUsers: [],
        users: []
    }
}

function getValuesHelper(form: IForm, name: string): any { 
    const input: any = form.inputs.find((input: IInput) => input.name === name);
    return input.value;
}